/////////////////////////////////////////////////////////////////////////////////
//                                                                             //
// <auto-generated>                                                            //
// Date=? Machine=? User=?                                                     //
// Copyright (c) 2010-2011 Agridea, All Rights Reserved                        //
// </auto-generated>                                                           //
//                                                                             //
/////////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Data.SqlClient;
//using System.Data.Entity.SqlServer;
using System.Diagnostics;
using System.Linq;
using System.Reflection;
using System.Text;
using Agridea;
using Agridea.Calendar;
using Agridea.DataRepository;
using Agridea.Diagnostics.Contracts;
using Agridea.Diagnostics.Logging;
using Agridea.Metadata;
using Agridea.News;
using Agridea.Security;
using Agridea.Service;
using Agridea.Web.UI;

namespace Agridea.Web.UI
{
    public class DomainModelMetadata
    {
        public IList<MetadataEntity> MetadataEntityList;
    	private IDictionary<string, MetadataEntity> metadataEntityForGuid_;
    	private MetadataEntity metadataEntity_;
    	private MetadataEntity neededMetadataEntity_;
    	private MetadataEntity needingMetadataEntity_;
    	private MetadataField metadataField_;
    	private MetadataNavigationProperty metadataNavigationProperty_;
    
    	public DomainModelMetadata()
        {
            MetadataEntityList = new List<MetadataEntity>();
    		metadataEntityForGuid_ = new Dictionary<string, MetadataEntity>();
    
    	    //No warnings
            if (metadataEntity_ == null) metadataEntity_ = null;
            if (neededMetadataEntity_ == null) neededMetadataEntity_ = null;
            if (needingMetadataEntity_ == null) needingMetadataEntity_ = null;
            if (metadataField_ == null) metadataField_ = null;
            if (metadataNavigationProperty_ == null) metadataNavigationProperty_ = null;
    
    		//Pass1 : find entities
    
        	//Pass2 : add entity usages
        }
    }
}
