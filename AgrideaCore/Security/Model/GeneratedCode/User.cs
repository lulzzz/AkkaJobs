/////////////////////////////////////////////////////////////////////////////////
//                                                                             //
// <auto-generated>                                                            //
// Date=? Machine=? User=?                                                     //
// Copyright (c) 2010-2011 Agridea, All Rights Reserved                        //
// </auto-generated>                                                           //
//                                                                             //
/////////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Data.SqlClient;
//using System.Data.Entity.SqlServer;
using System.Diagnostics;
using System.Linq;
using System.Reflection;
using System.Text;
using Agridea;
using Agridea.Calendar;
using Agridea.DataRepository;
using Agridea.Diagnostics.Contracts;
using Agridea.Diagnostics.Logging;
using Agridea.Metadata;
using Agridea.News;
using Agridea.Security;
using Agridea.Service;
using Agridea.Web.UI;

namespace Agridea.Security
{
    [Serializable]
    public partial class User : PocoBase, IEquatable<User>
    {
        #region Primitive Properties
        public virtual bool Blocked { get; set;}
        public virtual string Email { get; set;}
        public virtual Nullable<System.DateTime> LastActivityDate { get; set;}
        public virtual Nullable<System.DateTime> LastLoginDate { get; set;}
        public virtual Nullable<System.DateTime> LastPasswordChangeDate { get; set;}
        public virtual string Password { get; set;}
        public virtual bool SuperUser { get; set;}
        [Discriminant]
        [MaxLength(128)]
        public virtual string UserName { get; set;}

        #endregion

     
        #region Navigation Properties
    
        private IList<UserRole> userRoleList_;
        public virtual IList<UserRole> UserRoleList //User 1<==>* UserRole
        {
            get { return userRoleList_ ?? (userRoleList_ = new List<UserRole>()); }
            set { userRoleList_ = value;}
        }   

        #endregion

     
        #region Initialization
        public void CopyTo(User other)
        {
            other.Blocked = Blocked;
            other.Email = Email;
            other.LastActivityDate = LastActivityDate;
            other.LastLoginDate = LastLoginDate;
            other.LastPasswordChangeDate = LastPasswordChangeDate;
            other.Password = Password;
            other.SuperUser = SuperUser;
            other.UserName = UserName;
        }
        #endregion

     
        #region Identity
        public override string ToString()
        {
            return string.Format("[{0} Blocked='{1}' Email='{2}' LastActivityDate='{3}' LastLoginDate='{4}' LastPasswordChangeDate='{5}' Password='{6}' SuperUser='{7}' UserName='{8}' UserRoleList.Count='{9}']",
                base.ToString(),
                Blocked,
                Email,
                LastActivityDate,
                LastLoginDate,
                LastPasswordChangeDate,
                Password,
                SuperUser,
                UserName,
                UserRoleList.Count);
        }
        public override int GetHashCode() { return base.GetHashCode(); }
    	public string NaturalKey()
    	{ 
    	    return 
                UserName;
        }
        public override bool Equals(object other)
        {
            return Equals(other as User);
        }
        public bool Equals(User other)
        {
            if (object.ReferenceEquals(other, null)) return false;
            if (object.ReferenceEquals(this, other)) return true;
            if (!Id.Equals(other.Id)) return false;
            if (!Id.Equals(0) && Id.Equals(other.Id)) return true;
            return UserName == other.UserName;
        } 

        #endregion

     
    }
}
